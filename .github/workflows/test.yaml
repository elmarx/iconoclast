name: test
on: [ push, pull_request ]

jobs:
  test:
    name: test iconoclast
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-nextest
        uses: taiki-e/install-action@cargo-nextest

      - name: install required native libs
        run: sudo apt-get install libsasl2-dev

      - run: cargo fmt --check

      - name: compile iconoclast without any features
        run: cargo check -p iconoclast --all-targets --no-default-features

      - name: compile iconoclast with all features
        run: cargo check -p iconoclast --all-targets --all-features

      - name: compile demo
        run: cargo check -p uservice --all-targets --no-default-features

      - name: Run Tests
        run: cargo nextest run --all-features --all-targets

      - uses: crusty-pie/clippy@v1
        with:
          args: --all-features --all-targets

  skeleton:
    name: test skeleton
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: skeleton
      - name: Install cargo-nextest
        uses: taiki-e/install-action@cargo-nextest

      - name: install required native libs
        run: sudo apt-get install libsasl2-dev

      - run: cargo fmt --check
        working-directory: skeleton

      - name: use iconoclast from source
        run: |
          cat <<EOF >> skeleton/Cargo.toml
          
          [patch."crates-io"]
          iconoclast = { path = "../iconoclast" }
          EOF

      - name: compile skeleton
        run: cargo check --all-targets
        working-directory: skeleton

  skeleton_oci:
    name: skeleton OCI w/ iconoclast from crates.io
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image with iconoclast from crates.io
        uses: docker/build-push-action@v6
        with:
          context: skeleton
          cache-from: type=gha
          cache-to: type=gha,mode=max

  skeleton_oci_from_source:
    name: skeleton OCI w/ iconoclast from source
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image with iconoclast from source
        uses: docker/build-push-action@v6
        with:
          context: skeleton
          build-args: ICONOCLAST_SOURCE=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max